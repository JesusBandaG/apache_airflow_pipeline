[2023-05-04T07:48:50.310+0000] {taskinstance.py:1125} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: dag_data_pipeline.MasterLayer.load_master scheduled__2023-01-01T00:00:00+00:00 [queued]>
[2023-05-04T07:48:50.324+0000] {taskinstance.py:1125} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: dag_data_pipeline.MasterLayer.load_master scheduled__2023-01-01T00:00:00+00:00 [queued]>
[2023-05-04T07:48:50.324+0000] {taskinstance.py:1331} INFO - Starting attempt 4 of 6
[2023-05-04T07:48:50.349+0000] {taskinstance.py:1350} INFO - Executing <Task(PostgresOperator): MasterLayer.load_master> on 2023-01-01 00:00:00+00:00
[2023-05-04T07:48:50.358+0000] {standard_task_runner.py:57} INFO - Started process 23620 to run task
[2023-05-04T07:48:50.365+0000] {standard_task_runner.py:84} INFO - Running: ['***', 'tasks', 'run', 'dag_data_pipeline', 'MasterLayer.load_master', 'scheduled__2023-01-01T00:00:00+00:00', '--job-id', '13', '--raw', '--subdir', 'DAGS_FOLDER/pipeline.py', '--cfg-path', '/tmp/tmpwcvgxbak']
[2023-05-04T07:48:50.366+0000] {standard_task_runner.py:85} INFO - Job 13: Subtask MasterLayer.load_master
[2023-05-04T07:48:50.459+0000] {task_command.py:410} INFO - Running <TaskInstance: dag_data_pipeline.MasterLayer.load_master scheduled__2023-01-01T00:00:00+00:00 [running]> on host 1ae395992ef5
[2023-05-04T07:48:50.610+0000] {taskinstance.py:1570} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='Jesus Banda' AIRFLOW_CTX_DAG_ID='dag_data_pipeline' AIRFLOW_CTX_TASK_ID='MasterLayer.load_master' AIRFLOW_CTX_EXECUTION_DATE='2023-01-01T00:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='4' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2023-01-01T00:00:00+00:00'
[2023-05-04T07:48:50.614+0000] {sql.py:262} INFO - Executing: 
                INSERT INTO master_titanic (
                    id, full_name, title, survived, age, generation,
                    genre, sibling_spouse, parent_child, price_ticket, embarked, load_date, load_datetime
                )
                SELECT DISTINCT
                CAST(passenger_id AS VARCHAR) AS id,
                CAST(full_name AS VARCHAR) AS full_name,
                CAST(title AS VARCHAR) AS title,
                CASE
                    WHEN survived = 1 THEN 'SURVIVOR'
                    ELSE 'NOT SURVIVOR'
                END AS survived,
                CAST(age AS VARCHAR) AS age,
                CASE
                    WHEN age > 18 THEN 'Z Gen'
                    WHEN age BETWEEN 18 AND 39 THEN 'Millenial'
                    WHEN age BETWEEN 40 AND 59 THEN 'X Gen'
                    WHEN age BETWEEN 60 AND 79 THEN 'Baby Boomer'
                    ELSE 'Older than 80 years'
                END AS generation,
                CAST(sex AS VARCHAR) AS genre,
                CAST(sibsp AS VARCHAR) AS sibling_spouse,
                CASE
                    WHEN embarked = 'C' THEN 'Cherbourg'
                    WHEN embarked = 'Q' THEN 'Queenstown'
                    WHEN embarked = 'S' THEN 'Southampton'
                END AS embarked,
                CAST(2023-05-04 AS VARCHAR) AS load_date,
                NOW() AS load_datetime
                FROM public.raw_titanic t
                WHERE NOT EXISTS (
                    SELECT 1 FROM master_titanic mt
                    WHERE mt.id = CAST(t.passenger_id AS VARCHAR)
                )
            
[2023-05-04T07:48:50.628+0000] {base.py:73} INFO - Using connection ID 'postgres_docker' for task execution.
[2023-05-04T07:48:50.750+0000] {base.py:73} INFO - Using connection ID 'postgres_docker' for task execution.
[2023-05-04T07:48:50.773+0000] {sql.py:375} INFO - Running statement: 
                INSERT INTO master_titanic (
                    id, full_name, title, survived, age, generation,
                    genre, sibling_spouse, parent_child, price_ticket, embarked, load_date, load_datetime
                )
                SELECT DISTINCT
                CAST(passenger_id AS VARCHAR) AS id,
                CAST(full_name AS VARCHAR) AS full_name,
                CAST(title AS VARCHAR) AS title,
                CASE
                    WHEN survived = 1 THEN 'SURVIVOR'
                    ELSE 'NOT SURVIVOR'
                END AS survived,
                CAST(age AS VARCHAR) AS age,
                CASE
                    WHEN age > 18 THEN 'Z Gen'
                    WHEN age BETWEEN 18 AND 39 THEN 'Millenial'
                    WHEN age BETWEEN 40 AND 59 THEN 'X Gen'
                    WHEN age BETWEEN 60 AND 79 THEN 'Baby Boomer'
                    ELSE 'Older than 80 years'
                END AS generation,
                CAST(sex AS VARCHAR) AS genre,
                CAST(sibsp AS VARCHAR) AS sibling_spouse,
                CASE
                    WHEN embarked = 'C' THEN 'Cherbourg'
                    WHEN embarked = 'Q' THEN 'Queenstown'
                    WHEN embarked = 'S' THEN 'Southampton'
                END AS embarked,
                CAST(2023-05-04 AS VARCHAR) AS load_date,
                NOW() AS load_datetime
                FROM public.raw_titanic t
                WHERE NOT EXISTS (
                    SELECT 1 FROM master_titanic mt
                    WHERE mt.id = CAST(t.passenger_id AS VARCHAR)
                )
            , parameters: None
[2023-05-04T07:48:50.785+0000] {taskinstance.py:1847} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/providers/common/sql/operators/sql.py", line 274, in execute
    **extra_kwargs,
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/providers/common/sql/hooks/sql.py", line 349, in run
    self._run_command(cur, sql_statement, parameters)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/providers/common/sql/hooks/sql.py", line 380, in _run_command
    cur.execute(sql_statement)
psycopg2.errors.SyntaxError: INSERT has more target columns than expressions
LINE 4: ...ing_spouse, parent_child, price_ticket, embarked, load_date,...
                                                             ^

[2023-05-04T07:48:50.800+0000] {taskinstance.py:1373} INFO - Marking task as UP_FOR_RETRY. dag_id=dag_data_pipeline, task_id=MasterLayer.load_master, execution_date=20230101T000000, start_date=20230504T074850, end_date=20230504T074850
[2023-05-04T07:48:50.820+0000] {standard_task_runner.py:109} ERROR - Failed to execute job 13 for task MasterLayer.load_master (INSERT has more target columns than expressions
LINE 4: ...ing_spouse, parent_child, price_ticket, embarked, load_date,...
                                                             ^
; 23620)
[2023-05-04T07:48:50.859+0000] {local_task_job_runner.py:232} INFO - Task exited with return code 1
[2023-05-04T07:48:50.891+0000] {taskinstance.py:2674} INFO - 0 downstream tasks scheduled from follow-on schedule check
